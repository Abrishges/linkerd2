---
###
### Identity Controller Service
###
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-identity
  namespace: Namespace
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: linkerd-Namespace-identity
rules:
- apiGroups: ["authentication.k8s.io"]
  resources: ["tokenreviews"]
  verbs: ["create"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: linkerd-Namespace-identity
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: linkerd-Namespace-identity
subjects:
- kind: ServiceAccount
  name: linkerd-identity
  namespace: Namespace
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-identity
  namespace: Namespace
  labels:
    ControllerComponentLabel: identity
  annotations:
    CreatedByAnnotation: CliVersion
spec:
  type: ClusterIP
  selector:
    ControllerComponentLabel: identity
  ports:
  - name: grpc
    port: 8080
    targetPort: 8080
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: linkerd-identity-trust-anchors
  namespace: Namespace
  labels:
    ControllerComponentLabel: identity
  annotations:
    CreatedByAnnotation: CliVersion
data:
  trust-anchors.pem: |-
    zyx
---
kind: Secret
apiVersion: v1
metadata:
  name: linkerd-identity-issuer
  namespace: Namespace
  labels:
    ControllerComponentLabel: identity
  annotations:
    CreatedByAnnotation: CliVersion
    linkerd.io/identity-issuer-expiry: 2030-02-12T00:00:00Z
data:
  crt.pem: ZGVm
  key.pem: YWJj
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    CreatedByAnnotation: CliVersion
  creationTimestamp: null
  labels:
    ControllerComponentLabel: identity
  name: linkerd-identity
  namespace: Namespace
spec:
  strategy: {}
  template:
    metadata:
      annotations:
        CreatedByAnnotation: CliVersion
        linkerd.io/created-by: linkerd/cli dev-undefined
        linkerd.io/identity-mode: default
        linkerd.io/proxy-version: dev-undefined
      creationTimestamp: null
      labels:
        ControllerComponentLabel: identity
        linkerd.io/control-plane-ns: Namespace
        linkerd.io/proxy-deployment: linkerd-identity
    spec:
      containers:
      - args:
        - identity
        - -addr=:8080
        - -admin-addr=:9990
        - -log-level=ControllerLogLevel
        - -controller-namespace=Namespace
        - -trust-domain=cluster.local
        - -trust-anchors=/var/run/linkerd/identity/trust-anchors/trust-anchors.pem
        - -issuer=/var/run/linkerd/identity/issuer
        - -issuance-lifetime=
        image: ControllerImage
        imagePullPolicy: ImagePullPolicy
        livenessProbe:
          httpGet:
            path: /ping
            port: 9990
          initialDelaySeconds: 10
        name: identity
        ports:
        - containerPort: 8080
          name: grpc
        - containerPort: 9990
          name: admin-http
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: 9990
        resources: {}
        securityContext:
          runAsUser: 2103
        volumeMounts:
        - mountPath: /var/run/linkerd/identity/trust-anchors
          name: identity-trust-anchors
        - mountPath: /var/run/linkerd/identity/issuer
          name: identity-issuer
      - env:
        - name: LINKERD2_PROXY_LOG
          value: warn,linkerd2_proxy=info
        - name: LINKERD2_PROXY_CONTROL_URL
          value: tcp://linkerd-destination.Namespace.svc.cluster.local:8086
        - name: LINKERD2_PROXY_CONTROL_LISTENER
          value: tcp://0.0.0.0:4190
        - name: LINKERD2_PROXY_METRICS_LISTENER
          value: tcp://0.0.0.0:4191
        - name: LINKERD2_PROXY_OUTBOUND_LISTENER
          value: tcp://127.0.0.1:4140
        - name: LINKERD2_PROXY_INBOUND_LISTENER
          value: tcp://0.0.0.0:4143
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
          value: .
        - name: LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE
          value: 10000ms
        - name: K8S_SA
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        - name: K8S_NS
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: L5D_NS
          value: Namespace
        - name: L5D_TRUST_DOMAIN
          value: cluster.local
        - name: LINKERD2_PROXY_ID
          value: $(K8S_SA).$(K8S_NS).serviceaccount.identity.$(L5D_NS).$(L5D_TRUST_DOMAIN)
        - name: LINKERD2_PROXY_TLS_TRUST_ANCHORS
          value: /var/run/linkerd/identity/trust-anchors/trust-anchors.pem
        - name: LINKERD2_PROXY_TLS_END_ENTITY_DIR
          value: /var/run/linkerd/identity/end-entity
        - name: LINKERD2_PROXY_TLS_POD_IDENTITY
          value: $(LINKERD2_PROXY_ID)
        - name: LINKERD2_PROXY_CONTROLLER_NAMESPACE
          value: Namespace
        - name: LINKERD2_PROXY_TLS_CONTROLLER_IDENTITY
          value: linkerd-controller.$(L5D_NS).serviceaccount.identity.$(L5D_NS).$(L5D_TRUST_DOMAIN)
        image: gcr.io/linkerd-io/proxy-identity-init:dev-undefined
        imagePullPolicy: IfNotPresent
        name: linkerd-proxy-identity
        resources: {}
        securityContext:
          runAsUser: 2102
        terminationMessagePolicy: FallbackToLogsOnError
      - env:
        - name: LINKERD2_PROXY_LOG
          value: warn,linkerd2_proxy=info
        - name: LINKERD2_PROXY_CONTROL_URL
          value: tcp://linkerd-destination.Namespace.svc.cluster.local:8086
        - name: LINKERD2_PROXY_CONTROL_LISTENER
          value: tcp://0.0.0.0:4190
        - name: LINKERD2_PROXY_METRICS_LISTENER
          value: tcp://0.0.0.0:4191
        - name: LINKERD2_PROXY_OUTBOUND_LISTENER
          value: tcp://127.0.0.1:4140
        - name: LINKERD2_PROXY_INBOUND_LISTENER
          value: tcp://0.0.0.0:4143
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
          value: .
        - name: LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE
          value: 10000ms
        - name: K8S_SA
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        - name: K8S_NS
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: L5D_NS
          value: Namespace
        - name: L5D_TRUST_DOMAIN
          value: cluster.local
        - name: LINKERD2_PROXY_ID
          value: $(K8S_SA).$(K8S_NS).serviceaccount.identity.$(L5D_NS).$(L5D_TRUST_DOMAIN)
        - name: LINKERD2_PROXY_TLS_TRUST_ANCHORS
          value: /var/run/linkerd/identity/trust-anchors/trust-anchors.pem
        - name: LINKERD2_PROXY_TLS_END_ENTITY_DIR
          value: /var/run/linkerd/identity/end-entity
        - name: LINKERD2_PROXY_TLS_POD_IDENTITY
          value: $(LINKERD2_PROXY_ID)
        - name: LINKERD2_PROXY_CONTROLLER_NAMESPACE
          value: Namespace
        - name: LINKERD2_PROXY_TLS_CONTROLLER_IDENTITY
          value: linkerd-controller.$(L5D_NS).serviceaccount.identity.$(L5D_NS).$(L5D_TRUST_DOMAIN)
        image: gcr.io/linkerd-io/proxy:dev-undefined
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /metrics
            port: 4191
          initialDelaySeconds: 10
        name: linkerd-proxy
        ports:
        - containerPort: 4143
          name: linkerd-proxy
        - containerPort: 4191
          name: linkerd-metrics
        readinessProbe:
          httpGet:
            path: /metrics
            port: 4191
          initialDelaySeconds: 10
        resources: {}
        securityContext:
          runAsUser: 2102
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /var/run/linkerd/identity/end-entity
          name: linkerd-identity-end-entity
          readOnly: true
      initContainers:
      - args:
        - --incoming-proxy-port
        - "4143"
        - --outgoing-proxy-port
        - "4140"
        - --proxy-uid
        - "2102"
        - --inbound-ports-to-ignore
        - 4190,4191
        - --outbound-ports-to-ignore
        - "443"
        image: gcr.io/linkerd-io/proxy-init:dev-undefined
        imagePullPolicy: IfNotPresent
        name: linkerd-init
        resources: {}
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
          privileged: false
          runAsNonRoot: false
          runAsUser: 0
        terminationMessagePolicy: FallbackToLogsOnError
      serviceAccountName: linkerd-identity
      volumes:
      - emptyDir:
          medium: Memory
        name: linkerd-identity-end-entity
status: {}
---
###
### General Controller Services: destination, public-api, tap
###
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-controller
  namespace: Namespace
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: linkerd-Namespace-controller
  namespace: Namespace
rules:
- apiGroups: ["extensions", "apps"]
  resources: ["daemonsets", "deployments", "replicasets", "statefulsets"]
  verbs: ["list", "get", "watch"]
- apiGroups: [""]
  resources: ["pods", "endpoints", "services", "replicationcontrollers"]
  verbs: ["list", "get", "watch"]
- apiGroups: [""]
  resources: ["namespaces"]
  resourceNames: ["Namespace"]
  verbs: ["list", "get", "watch"]
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: linkerd-Namespace-controller
  namespace: Namespace
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: linkerd-Namespace-controller
subjects:
- kind: ServiceAccount
  name: linkerd-controller
  namespace: Namespace
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-controller-api
  namespace: Namespace
  labels:
    ControllerComponentLabel: controller
  annotations:
    CreatedByAnnotation: CliVersion
spec:
  type: ClusterIP
  selector:
    ControllerComponentLabel: controller
  ports:
  - name: http
    port: 8085
    targetPort: 8085
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-destination
  namespace: Namespace
  labels:
    ControllerComponentLabel: controller
  annotations:
    CreatedByAnnotation: CliVersion
spec:
  type: ClusterIP
  selector:
    ControllerComponentLabel: controller
  ports:
  - name: grpc
    port: 123
    targetPort: 123
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    CreatedByAnnotation: CliVersion
  creationTimestamp: null
  labels:
    ControllerComponentLabel: controller
  name: linkerd-controller
  namespace: Namespace
spec:
  replicas: 1
  strategy: {}
  template:
    metadata:
      annotations:
        CreatedByAnnotation: CliVersion
        linkerd.io/created-by: linkerd/cli dev-undefined
        linkerd.io/identity-mode: default
        linkerd.io/proxy-version: dev-undefined
      creationTimestamp: null
      labels:
        ControllerComponentLabel: controller
        linkerd.io/control-plane-ns: Namespace
        linkerd.io/proxy-deployment: linkerd-controller
    spec:
      containers:
      - args:
        - public-api
        - -prometheus-url=http://linkerd-prometheus.Namespace.svc.cluster.local:9090
        - -controller-namespace=Namespace
        - -log-level=ControllerLogLevel
        image: ControllerImage
        imagePullPolicy: ImagePullPolicy
        livenessProbe:
          httpGet:
            path: /ping
            port: 9995
          initialDelaySeconds: 10
        name: public-api
        ports:
        - containerPort: 8085
          name: http
        - containerPort: 9995
          name: admin-http
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: 9995
        resources: {}
        securityContext:
          runAsUser: 2103
      - args:
        - destination
        - -addr=:123
        - -controller-namespace=Namespace
        - -enable-h2-upgrade=true
        - -log-level=ControllerLogLevel
        image: ControllerImage
        imagePullPolicy: ImagePullPolicy
        livenessProbe:
          httpGet:
            path: /ping
            port: 9996
          initialDelaySeconds: 10
        name: destination
        ports:
        - containerPort: 123
          name: grpc
        - containerPort: 9996
          name: admin-http
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: 9996
        resources: {}
        securityContext:
          runAsUser: 2103
      - args:
        - tap
        - -controller-namespace=Namespace
        - -log-level=ControllerLogLevel
        image: ControllerImage
        imagePullPolicy: ImagePullPolicy
        livenessProbe:
          httpGet:
            path: /ping
            port: 9998
          initialDelaySeconds: 10
        name: tap
        ports:
        - containerPort: 8088
          name: grpc
        - containerPort: 9998
          name: admin-http
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: 9998
        resources: {}
        securityContext:
          runAsUser: 2103
      - env:
        - name: LINKERD2_PROXY_LOG
          value: warn,linkerd2_proxy=info
        - name: LINKERD2_PROXY_CONTROL_URL
          value: tcp://localhost.:8086
        - name: LINKERD2_PROXY_CONTROL_LISTENER
          value: tcp://0.0.0.0:4190
        - name: LINKERD2_PROXY_METRICS_LISTENER
          value: tcp://0.0.0.0:4191
        - name: LINKERD2_PROXY_OUTBOUND_LISTENER
          value: tcp://127.0.0.1:4140
        - name: LINKERD2_PROXY_INBOUND_LISTENER
          value: tcp://0.0.0.0:4143
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
          value: .
        - name: LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE
          value: 10000ms
        - name: K8S_SA
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        - name: K8S_NS
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: L5D_NS
          value: Namespace
        - name: L5D_TRUST_DOMAIN
          value: cluster.local
        - name: LINKERD2_PROXY_ID
          value: $(K8S_SA).$(K8S_NS).serviceaccount.identity.$(L5D_NS).$(L5D_TRUST_DOMAIN)
        - name: LINKERD2_PROXY_TLS_TRUST_ANCHORS
          value: /var/run/linkerd/identity/trust-anchors/trust-anchors.pem
        - name: LINKERD2_PROXY_TLS_END_ENTITY_DIR
          value: /var/run/linkerd/identity/end-entity
        - name: LINKERD2_PROXY_TLS_POD_IDENTITY
          value: $(LINKERD2_PROXY_ID)
        - name: LINKERD2_PROXY_CONTROLLER_NAMESPACE
          value: Namespace
        - name: LINKERD2_PROXY_TLS_CONTROLLER_IDENTITY
          value: linkerd-controller.$(L5D_NS).serviceaccount.identity.$(L5D_NS).$(L5D_TRUST_DOMAIN)
        image: gcr.io/linkerd-io/proxy-identity-init:dev-undefined
        imagePullPolicy: IfNotPresent
        name: linkerd-proxy-identity
        resources: {}
        securityContext:
          runAsUser: 2102
        terminationMessagePolicy: FallbackToLogsOnError
      - env:
        - name: LINKERD2_PROXY_LOG
          value: warn,linkerd2_proxy=info
        - name: LINKERD2_PROXY_CONTROL_URL
          value: tcp://localhost.:8086
        - name: LINKERD2_PROXY_CONTROL_LISTENER
          value: tcp://0.0.0.0:4190
        - name: LINKERD2_PROXY_METRICS_LISTENER
          value: tcp://0.0.0.0:4191
        - name: LINKERD2_PROXY_OUTBOUND_LISTENER
          value: tcp://127.0.0.1:4140
        - name: LINKERD2_PROXY_INBOUND_LISTENER
          value: tcp://0.0.0.0:4143
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
          value: .
        - name: LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE
          value: 10000ms
        - name: K8S_SA
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        - name: K8S_NS
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: L5D_NS
          value: Namespace
        - name: L5D_TRUST_DOMAIN
          value: cluster.local
        - name: LINKERD2_PROXY_ID
          value: $(K8S_SA).$(K8S_NS).serviceaccount.identity.$(L5D_NS).$(L5D_TRUST_DOMAIN)
        - name: LINKERD2_PROXY_TLS_TRUST_ANCHORS
          value: /var/run/linkerd/identity/trust-anchors/trust-anchors.pem
        - name: LINKERD2_PROXY_TLS_END_ENTITY_DIR
          value: /var/run/linkerd/identity/end-entity
        - name: LINKERD2_PROXY_TLS_POD_IDENTITY
          value: $(LINKERD2_PROXY_ID)
        - name: LINKERD2_PROXY_CONTROLLER_NAMESPACE
          value: Namespace
        - name: LINKERD2_PROXY_TLS_CONTROLLER_IDENTITY
          value: linkerd-controller.$(L5D_NS).serviceaccount.identity.$(L5D_NS).$(L5D_TRUST_DOMAIN)
        image: gcr.io/linkerd-io/proxy:dev-undefined
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /metrics
            port: 4191
          initialDelaySeconds: 10
        name: linkerd-proxy
        ports:
        - containerPort: 4143
          name: linkerd-proxy
        - containerPort: 4191
          name: linkerd-metrics
        readinessProbe:
          httpGet:
            path: /metrics
            port: 4191
          initialDelaySeconds: 10
        resources: {}
        securityContext:
          runAsUser: 2102
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /var/run/linkerd/identity/end-entity
          name: linkerd-identity-end-entity
          readOnly: true
      initContainers:
      - args:
        - --incoming-proxy-port
        - "4143"
        - --outgoing-proxy-port
        - "4140"
        - --proxy-uid
        - "2102"
        - --inbound-ports-to-ignore
        - 4190,4191
        - --outbound-ports-to-ignore
        - "443"
        image: gcr.io/linkerd-io/proxy-init:dev-undefined
        imagePullPolicy: IfNotPresent
        name: linkerd-init
        resources: {}
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
          privileged: false
          runAsNonRoot: false
          runAsUser: 0
        terminationMessagePolicy: FallbackToLogsOnError
      serviceAccountName: linkerd-controller
      volumes:
      - emptyDir:
          medium: Memory
        name: linkerd-identity-end-entity
status: {}
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: linkerd-config
  namespace: Namespace
  labels:
    ControllerComponentLabel: controller
  annotations:
    CreatedByAnnotation: CliVersion
data:
  global: |
    GlobalConfig
  proxy: |
    ProxyConfig

---
###
### Web
###
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-web
  namespace: Namespace
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-web
  namespace: Namespace
  labels:
    ControllerComponentLabel: web
  annotations:
    CreatedByAnnotation: CliVersion
spec:
  type: ClusterIP
  selector:
    ControllerComponentLabel: web
  ports:
  - name: http
    port: 8084
    targetPort: 8084
  - name: admin-http
    port: 9994
    targetPort: 9994
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    CreatedByAnnotation: CliVersion
  creationTimestamp: null
  labels:
    ControllerComponentLabel: web
  name: linkerd-web
  namespace: Namespace
spec:
  replicas: 1
  strategy: {}
  template:
    metadata:
      annotations:
        CreatedByAnnotation: CliVersion
        linkerd.io/created-by: linkerd/cli dev-undefined
        linkerd.io/identity-mode: default
        linkerd.io/proxy-version: dev-undefined
      creationTimestamp: null
      labels:
        ControllerComponentLabel: web
        linkerd.io/control-plane-ns: Namespace
        linkerd.io/proxy-deployment: linkerd-web
    spec:
      containers:
      - args:
        - -api-addr=linkerd-controller-api.Namespace.svc.cluster.local:8085
        - -grafana-addr=linkerd-grafana.Namespace.svc.cluster.local:3000
        - -uuid=UUID
        - -controller-namespace=Namespace
        - -log-level=ControllerLogLevel
        image: WebImage
        imagePullPolicy: ImagePullPolicy
        livenessProbe:
          httpGet:
            path: /ping
            port: 9994
          initialDelaySeconds: 10
        name: web
        ports:
        - containerPort: 8084
          name: http
        - containerPort: 9994
          name: admin-http
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: 9994
        resources: {}
        securityContext:
          runAsUser: 2103
      - env:
        - name: LINKERD2_PROXY_LOG
          value: warn,linkerd2_proxy=info
        - name: LINKERD2_PROXY_CONTROL_URL
          value: tcp://linkerd-destination.Namespace.svc.cluster.local:8086
        - name: LINKERD2_PROXY_CONTROL_LISTENER
          value: tcp://0.0.0.0:4190
        - name: LINKERD2_PROXY_METRICS_LISTENER
          value: tcp://0.0.0.0:4191
        - name: LINKERD2_PROXY_OUTBOUND_LISTENER
          value: tcp://127.0.0.1:4140
        - name: LINKERD2_PROXY_INBOUND_LISTENER
          value: tcp://0.0.0.0:4143
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
          value: .
        - name: LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE
          value: 10000ms
        - name: K8S_SA
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        - name: K8S_NS
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: L5D_NS
          value: Namespace
        - name: L5D_TRUST_DOMAIN
          value: cluster.local
        - name: LINKERD2_PROXY_ID
          value: $(K8S_SA).$(K8S_NS).serviceaccount.identity.$(L5D_NS).$(L5D_TRUST_DOMAIN)
        - name: LINKERD2_PROXY_TLS_TRUST_ANCHORS
          value: /var/run/linkerd/identity/trust-anchors/trust-anchors.pem
        - name: LINKERD2_PROXY_TLS_END_ENTITY_DIR
          value: /var/run/linkerd/identity/end-entity
        - name: LINKERD2_PROXY_TLS_POD_IDENTITY
          value: $(LINKERD2_PROXY_ID)
        - name: LINKERD2_PROXY_CONTROLLER_NAMESPACE
          value: Namespace
        - name: LINKERD2_PROXY_TLS_CONTROLLER_IDENTITY
          value: linkerd-controller.$(L5D_NS).serviceaccount.identity.$(L5D_NS).$(L5D_TRUST_DOMAIN)
        image: gcr.io/linkerd-io/proxy-identity-init:dev-undefined
        imagePullPolicy: IfNotPresent
        name: linkerd-proxy-identity
        resources: {}
        securityContext:
          runAsUser: 2102
        terminationMessagePolicy: FallbackToLogsOnError
      - env:
        - name: LINKERD2_PROXY_LOG
          value: warn,linkerd2_proxy=info
        - name: LINKERD2_PROXY_CONTROL_URL
          value: tcp://linkerd-destination.Namespace.svc.cluster.local:8086
        - name: LINKERD2_PROXY_CONTROL_LISTENER
          value: tcp://0.0.0.0:4190
        - name: LINKERD2_PROXY_METRICS_LISTENER
          value: tcp://0.0.0.0:4191
        - name: LINKERD2_PROXY_OUTBOUND_LISTENER
          value: tcp://127.0.0.1:4140
        - name: LINKERD2_PROXY_INBOUND_LISTENER
          value: tcp://0.0.0.0:4143
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
          value: .
        - name: LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE
          value: 10000ms
        - name: K8S_SA
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        - name: K8S_NS
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: L5D_NS
          value: Namespace
        - name: L5D_TRUST_DOMAIN
          value: cluster.local
        - name: LINKERD2_PROXY_ID
          value: $(K8S_SA).$(K8S_NS).serviceaccount.identity.$(L5D_NS).$(L5D_TRUST_DOMAIN)
        - name: LINKERD2_PROXY_TLS_TRUST_ANCHORS
          value: /var/run/linkerd/identity/trust-anchors/trust-anchors.pem
        - name: LINKERD2_PROXY_TLS_END_ENTITY_DIR
          value: /var/run/linkerd/identity/end-entity
        - name: LINKERD2_PROXY_TLS_POD_IDENTITY
          value: $(LINKERD2_PROXY_ID)
        - name: LINKERD2_PROXY_CONTROLLER_NAMESPACE
          value: Namespace
        - name: LINKERD2_PROXY_TLS_CONTROLLER_IDENTITY
          value: linkerd-controller.$(L5D_NS).serviceaccount.identity.$(L5D_NS).$(L5D_TRUST_DOMAIN)
        image: gcr.io/linkerd-io/proxy:dev-undefined
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /metrics
            port: 4191
          initialDelaySeconds: 10
        name: linkerd-proxy
        ports:
        - containerPort: 4143
          name: linkerd-proxy
        - containerPort: 4191
          name: linkerd-metrics
        readinessProbe:
          httpGet:
            path: /metrics
            port: 4191
          initialDelaySeconds: 10
        resources: {}
        securityContext:
          runAsUser: 2102
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /var/run/linkerd/identity/end-entity
          name: linkerd-identity-end-entity
          readOnly: true
      initContainers:
      - args:
        - --incoming-proxy-port
        - "4143"
        - --outgoing-proxy-port
        - "4140"
        - --proxy-uid
        - "2102"
        - --inbound-ports-to-ignore
        - 4190,4191
        - --outbound-ports-to-ignore
        - "443"
        image: gcr.io/linkerd-io/proxy-init:dev-undefined
        imagePullPolicy: IfNotPresent
        name: linkerd-init
        resources: {}
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
          privileged: false
          runAsNonRoot: false
          runAsUser: 0
        terminationMessagePolicy: FallbackToLogsOnError
      serviceAccountName: linkerd-web
      volumes:
      - emptyDir:
          medium: Memory
        name: linkerd-identity-end-entity
status: {}
---
###
### Prometheus
###
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-prometheus
  namespace: Namespace
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: linkerd-Namespace-prometheus
  namespace: Namespace
rules:
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["get", "list", "watch"]
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: linkerd-Namespace-prometheus
  namespace: Namespace
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: linkerd-Namespace-prometheus
subjects:
- kind: ServiceAccount
  name: linkerd-prometheus
  namespace: Namespace
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-prometheus
  namespace: Namespace
  labels:
    ControllerComponentLabel: prometheus
  annotations:
    CreatedByAnnotation: CliVersion
spec:
  type: ClusterIP
  selector:
    ControllerComponentLabel: prometheus
  ports:
  - name: admin-http
    port: 9090
    targetPort: 9090
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    CreatedByAnnotation: CliVersion
  creationTimestamp: null
  labels:
    ControllerComponentLabel: prometheus
  name: linkerd-prometheus
  namespace: Namespace
spec:
  replicas: 1
  strategy: {}
  template:
    metadata:
      annotations:
        CreatedByAnnotation: CliVersion
        linkerd.io/created-by: linkerd/cli dev-undefined
        linkerd.io/identity-mode: default
        linkerd.io/proxy-version: dev-undefined
      creationTimestamp: null
      labels:
        ControllerComponentLabel: prometheus
        linkerd.io/control-plane-ns: Namespace
        linkerd.io/proxy-deployment: linkerd-prometheus
    spec:
      containers:
      - args:
        - --storage.tsdb.path=/data
        - --storage.tsdb.retention=6h
        - --config.file=/etc/prometheus/prometheus.yml
        image: PrometheusImage
        imagePullPolicy: ImagePullPolicy
        livenessProbe:
          httpGet:
            path: /-/healthy
            port: 9090
          initialDelaySeconds: 30
          timeoutSeconds: 30
        name: prometheus
        ports:
        - containerPort: 9090
          name: admin-http
        readinessProbe:
          httpGet:
            path: /-/ready
            port: 9090
          initialDelaySeconds: 30
          timeoutSeconds: 30
        resources: {}
        securityContext:
          runAsUser: 65534
        volumeMounts:
        - mountPath: /data
          name: data
        - mountPath: /etc/prometheus
          name: prometheus-config
          readOnly: true
      - env:
        - name: LINKERD2_PROXY_LOG
          value: warn,linkerd2_proxy=info
        - name: LINKERD2_PROXY_CONTROL_URL
          value: tcp://linkerd-destination.Namespace.svc.cluster.local:8086
        - name: LINKERD2_PROXY_CONTROL_LISTENER
          value: tcp://0.0.0.0:4190
        - name: LINKERD2_PROXY_METRICS_LISTENER
          value: tcp://0.0.0.0:4191
        - name: LINKERD2_PROXY_OUTBOUND_LISTENER
          value: tcp://127.0.0.1:4140
        - name: LINKERD2_PROXY_INBOUND_LISTENER
          value: tcp://0.0.0.0:4143
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
          value: .
        - name: LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE
          value: 10000ms
        - name: K8S_SA
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        - name: K8S_NS
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: L5D_NS
          value: Namespace
        - name: L5D_TRUST_DOMAIN
          value: cluster.local
        - name: LINKERD2_PROXY_ID
          value: $(K8S_SA).$(K8S_NS).serviceaccount.identity.$(L5D_NS).$(L5D_TRUST_DOMAIN)
        - name: LINKERD2_PROXY_OUTBOUND_ROUTER_CAPACITY
          value: "10000"
        - name: LINKERD2_PROXY_TLS_TRUST_ANCHORS
          value: /var/run/linkerd/identity/trust-anchors/trust-anchors.pem
        - name: LINKERD2_PROXY_TLS_END_ENTITY_DIR
          value: /var/run/linkerd/identity/end-entity
        - name: LINKERD2_PROXY_TLS_POD_IDENTITY
          value: $(LINKERD2_PROXY_ID)
        - name: LINKERD2_PROXY_CONTROLLER_NAMESPACE
          value: Namespace
        - name: LINKERD2_PROXY_TLS_CONTROLLER_IDENTITY
          value: linkerd-controller.$(L5D_NS).serviceaccount.identity.$(L5D_NS).$(L5D_TRUST_DOMAIN)
        image: gcr.io/linkerd-io/proxy-identity-init:dev-undefined
        imagePullPolicy: IfNotPresent
        name: linkerd-proxy-identity
        resources: {}
        securityContext:
          runAsUser: 2102
        terminationMessagePolicy: FallbackToLogsOnError
      - env:
        - name: LINKERD2_PROXY_LOG
          value: warn,linkerd2_proxy=info
        - name: LINKERD2_PROXY_CONTROL_URL
          value: tcp://linkerd-destination.Namespace.svc.cluster.local:8086
        - name: LINKERD2_PROXY_CONTROL_LISTENER
          value: tcp://0.0.0.0:4190
        - name: LINKERD2_PROXY_METRICS_LISTENER
          value: tcp://0.0.0.0:4191
        - name: LINKERD2_PROXY_OUTBOUND_LISTENER
          value: tcp://127.0.0.1:4140
        - name: LINKERD2_PROXY_INBOUND_LISTENER
          value: tcp://0.0.0.0:4143
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
          value: .
        - name: LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE
          value: 10000ms
        - name: K8S_SA
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        - name: K8S_NS
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: L5D_NS
          value: Namespace
        - name: L5D_TRUST_DOMAIN
          value: cluster.local
        - name: LINKERD2_PROXY_ID
          value: $(K8S_SA).$(K8S_NS).serviceaccount.identity.$(L5D_NS).$(L5D_TRUST_DOMAIN)
        - name: LINKERD2_PROXY_OUTBOUND_ROUTER_CAPACITY
          value: "10000"
        - name: LINKERD2_PROXY_TLS_TRUST_ANCHORS
          value: /var/run/linkerd/identity/trust-anchors/trust-anchors.pem
        - name: LINKERD2_PROXY_TLS_END_ENTITY_DIR
          value: /var/run/linkerd/identity/end-entity
        - name: LINKERD2_PROXY_TLS_POD_IDENTITY
          value: $(LINKERD2_PROXY_ID)
        - name: LINKERD2_PROXY_CONTROLLER_NAMESPACE
          value: Namespace
        - name: LINKERD2_PROXY_TLS_CONTROLLER_IDENTITY
          value: linkerd-controller.$(L5D_NS).serviceaccount.identity.$(L5D_NS).$(L5D_TRUST_DOMAIN)
        image: gcr.io/linkerd-io/proxy:dev-undefined
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /metrics
            port: 4191
          initialDelaySeconds: 10
        name: linkerd-proxy
        ports:
        - containerPort: 4143
          name: linkerd-proxy
        - containerPort: 4191
          name: linkerd-metrics
        readinessProbe:
          httpGet:
            path: /metrics
            port: 4191
          initialDelaySeconds: 10
        resources: {}
        securityContext:
          runAsUser: 2102
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /var/run/linkerd/identity/end-entity
          name: linkerd-identity-end-entity
          readOnly: true
      initContainers:
      - args:
        - --incoming-proxy-port
        - "4143"
        - --outgoing-proxy-port
        - "4140"
        - --proxy-uid
        - "2102"
        - --inbound-ports-to-ignore
        - 4190,4191
        - --outbound-ports-to-ignore
        - "443"
        image: gcr.io/linkerd-io/proxy-init:dev-undefined
        imagePullPolicy: IfNotPresent
        name: linkerd-init
        resources: {}
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
          privileged: false
          runAsNonRoot: false
          runAsUser: 0
        terminationMessagePolicy: FallbackToLogsOnError
      serviceAccountName: linkerd-prometheus
      volumes:
      - emptyDir: {}
        name: data
      - configMap:
          name: linkerd-prometheus-config
        name: prometheus-config
      - emptyDir:
          medium: Memory
        name: linkerd-identity-end-entity
status: {}
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: linkerd-prometheus-config
  namespace: Namespace
  labels:
    ControllerComponentLabel: prometheus
  annotations:
    CreatedByAnnotation: CliVersion
data:
  prometheus.yml: |-
    global:
      scrape_interval: 10s
      scrape_timeout: 10s
      evaluation_interval: 10s

    rule_files:
    - /etc/prometheus/*_rules.yml

    scrape_configs:
    - job_name: 'prometheus'
      static_configs:
      - targets: ['localhost:9090']

    - job_name: 'grafana'
      kubernetes_sd_configs:
      - role: pod
        namespaces:
          names: ['Namespace']
      relabel_configs:
      - source_labels:
        - __meta_kubernetes_pod_container_name
        action: keep
        regex: ^grafana$

    - job_name: 'linkerd-controller'
      kubernetes_sd_configs:
      - role: pod
        namespaces:
          names: ['Namespace']
      relabel_configs:
      - source_labels:
        - __meta_kubernetes_pod_label_linkerd_io_control_plane_component
        - __meta_kubernetes_pod_container_port_name
        action: keep
        regex: (.*);admin-http$
      - source_labels: [__meta_kubernetes_pod_container_name]
        action: replace
        target_label: component

    - job_name: 'linkerd-proxy'
      kubernetes_sd_configs:
      - role: pod
        namespaces:
          names: ['Namespace']
      relabel_configs:
      - source_labels:
        - __meta_kubernetes_pod_container_name
        - __meta_kubernetes_pod_container_port_name
        - __meta_kubernetes_pod_label_linkerd_io_control_plane_ns
        action: keep
        regex: ^ProxyContainerName;linkerd-metrics;Namespace$
      - source_labels: [__meta_kubernetes_namespace]
        action: replace
        target_label: namespace
      - source_labels: [__meta_kubernetes_pod_name]
        action: replace
        target_label: pod
      # special case k8s' "job" label, to not interfere with prometheus' "job"
      # label
      # __meta_kubernetes_pod_label_linkerd_io_proxy_job=foo =>
      # k8s_job=foo
      - source_labels: [__meta_kubernetes_pod_label_linkerd_io_proxy_job]
        action: replace
        target_label: k8s_job
      # drop __meta_kubernetes_pod_label_linkerd_io_proxy_job
      - action: labeldrop
        regex: __meta_kubernetes_pod_label_linkerd_io_proxy_job
      # __meta_kubernetes_pod_label_linkerd_io_proxy_deployment=foo =>
      # deployment=foo
      - action: labelmap
        regex: __meta_kubernetes_pod_label_linkerd_io_proxy_(.+)
      # drop all labels that we just made copies of in the previous labelmap
      - action: labeldrop
        regex: __meta_kubernetes_pod_label_linkerd_io_proxy_(.+)
      # __meta_kubernetes_pod_label_linkerd_io_foo=bar =>
      # foo=bar
      - action: labelmap
        regex: __meta_kubernetes_pod_label_linkerd_io_(.+)
---
###
### Grafana
###
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-grafana
  namespace: Namespace
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-grafana
  namespace: Namespace
  labels:
    ControllerComponentLabel: grafana
  annotations:
    CreatedByAnnotation: CliVersion
spec:
  type: ClusterIP
  selector:
    ControllerComponentLabel: grafana
  ports:
  - name: http
    port: 3000
    targetPort: 3000
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    CreatedByAnnotation: CliVersion
  creationTimestamp: null
  labels:
    ControllerComponentLabel: grafana
  name: linkerd-grafana
  namespace: Namespace
spec:
  replicas: 1
  strategy: {}
  template:
    metadata:
      annotations:
        CreatedByAnnotation: CliVersion
        linkerd.io/created-by: linkerd/cli dev-undefined
        linkerd.io/identity-mode: default
        linkerd.io/proxy-version: dev-undefined
      creationTimestamp: null
      labels:
        ControllerComponentLabel: grafana
        linkerd.io/control-plane-ns: Namespace
        linkerd.io/proxy-deployment: linkerd-grafana
    spec:
      containers:
      - env:
        - name: GF_PATHS_DATA
          value: /data
        image: GrafanaImage
        imagePullPolicy: ImagePullPolicy
        livenessProbe:
          httpGet:
            path: /api/health
            port: 3000
          initialDelaySeconds: 30
        name: grafana
        ports:
        - containerPort: 3000
          name: http
        readinessProbe:
          httpGet:
            path: /api/health
            port: 3000
        resources: {}
        securityContext:
          runAsUser: 472
        volumeMounts:
        - mountPath: /data
          name: data
        - mountPath: /etc/grafana
          name: grafana-config
          readOnly: true
      - env:
        - name: LINKERD2_PROXY_LOG
          value: warn,linkerd2_proxy=info
        - name: LINKERD2_PROXY_CONTROL_URL
          value: tcp://linkerd-destination.Namespace.svc.cluster.local:8086
        - name: LINKERD2_PROXY_CONTROL_LISTENER
          value: tcp://0.0.0.0:4190
        - name: LINKERD2_PROXY_METRICS_LISTENER
          value: tcp://0.0.0.0:4191
        - name: LINKERD2_PROXY_OUTBOUND_LISTENER
          value: tcp://127.0.0.1:4140
        - name: LINKERD2_PROXY_INBOUND_LISTENER
          value: tcp://0.0.0.0:4143
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
          value: .
        - name: LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE
          value: 10000ms
        - name: K8S_SA
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        - name: K8S_NS
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: L5D_NS
          value: Namespace
        - name: L5D_TRUST_DOMAIN
          value: cluster.local
        - name: LINKERD2_PROXY_ID
          value: $(K8S_SA).$(K8S_NS).serviceaccount.identity.$(L5D_NS).$(L5D_TRUST_DOMAIN)
        - name: LINKERD2_PROXY_TLS_TRUST_ANCHORS
          value: /var/run/linkerd/identity/trust-anchors/trust-anchors.pem
        - name: LINKERD2_PROXY_TLS_END_ENTITY_DIR
          value: /var/run/linkerd/identity/end-entity
        - name: LINKERD2_PROXY_TLS_POD_IDENTITY
          value: $(LINKERD2_PROXY_ID)
        - name: LINKERD2_PROXY_CONTROLLER_NAMESPACE
          value: Namespace
        - name: LINKERD2_PROXY_TLS_CONTROLLER_IDENTITY
          value: linkerd-controller.$(L5D_NS).serviceaccount.identity.$(L5D_NS).$(L5D_TRUST_DOMAIN)
        image: gcr.io/linkerd-io/proxy-identity-init:dev-undefined
        imagePullPolicy: IfNotPresent
        name: linkerd-proxy-identity
        resources: {}
        securityContext:
          runAsUser: 2102
        terminationMessagePolicy: FallbackToLogsOnError
      - env:
        - name: LINKERD2_PROXY_LOG
          value: warn,linkerd2_proxy=info
        - name: LINKERD2_PROXY_CONTROL_URL
          value: tcp://linkerd-destination.Namespace.svc.cluster.local:8086
        - name: LINKERD2_PROXY_CONTROL_LISTENER
          value: tcp://0.0.0.0:4190
        - name: LINKERD2_PROXY_METRICS_LISTENER
          value: tcp://0.0.0.0:4191
        - name: LINKERD2_PROXY_OUTBOUND_LISTENER
          value: tcp://127.0.0.1:4140
        - name: LINKERD2_PROXY_INBOUND_LISTENER
          value: tcp://0.0.0.0:4143
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
          value: .
        - name: LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE
          value: 10000ms
        - name: K8S_SA
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        - name: K8S_NS
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: L5D_NS
          value: Namespace
        - name: L5D_TRUST_DOMAIN
          value: cluster.local
        - name: LINKERD2_PROXY_ID
          value: $(K8S_SA).$(K8S_NS).serviceaccount.identity.$(L5D_NS).$(L5D_TRUST_DOMAIN)
        - name: LINKERD2_PROXY_TLS_TRUST_ANCHORS
          value: /var/run/linkerd/identity/trust-anchors/trust-anchors.pem
        - name: LINKERD2_PROXY_TLS_END_ENTITY_DIR
          value: /var/run/linkerd/identity/end-entity
        - name: LINKERD2_PROXY_TLS_POD_IDENTITY
          value: $(LINKERD2_PROXY_ID)
        - name: LINKERD2_PROXY_CONTROLLER_NAMESPACE
          value: Namespace
        - name: LINKERD2_PROXY_TLS_CONTROLLER_IDENTITY
          value: linkerd-controller.$(L5D_NS).serviceaccount.identity.$(L5D_NS).$(L5D_TRUST_DOMAIN)
        image: gcr.io/linkerd-io/proxy:dev-undefined
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /metrics
            port: 4191
          initialDelaySeconds: 10
        name: linkerd-proxy
        ports:
        - containerPort: 4143
          name: linkerd-proxy
        - containerPort: 4191
          name: linkerd-metrics
        readinessProbe:
          httpGet:
            path: /metrics
            port: 4191
          initialDelaySeconds: 10
        resources: {}
        securityContext:
          runAsUser: 2102
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /var/run/linkerd/identity/end-entity
          name: linkerd-identity-end-entity
          readOnly: true
      initContainers:
      - args:
        - --incoming-proxy-port
        - "4143"
        - --outgoing-proxy-port
        - "4140"
        - --proxy-uid
        - "2102"
        - --inbound-ports-to-ignore
        - 4190,4191
        - --outbound-ports-to-ignore
        - "443"
        image: gcr.io/linkerd-io/proxy-init:dev-undefined
        imagePullPolicy: IfNotPresent
        name: linkerd-init
        resources: {}
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
          privileged: false
          runAsNonRoot: false
          runAsUser: 0
        terminationMessagePolicy: FallbackToLogsOnError
      serviceAccountName: linkerd-grafana
      volumes:
      - emptyDir: {}
        name: data
      - configMap:
          items:
          - key: grafana.ini
            path: grafana.ini
          - key: datasources.yaml
            path: provisioning/datasources/datasources.yaml
          - key: dashboards.yaml
            path: provisioning/dashboards/dashboards.yaml
          name: linkerd-grafana-config
        name: grafana-config
      - emptyDir:
          medium: Memory
        name: linkerd-identity-end-entity
status: {}
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: linkerd-grafana-config
  namespace: Namespace
  labels:
    ControllerComponentLabel: grafana
  annotations:
    CreatedByAnnotation: CliVersion
data:
  grafana.ini: |-
    instance_name = linkerd-grafana

    [server]
    root_url = %(protocol)s://%(domain)s:/grafana/

    [auth]
    disable_login_form = true

    [auth.anonymous]
    enabled = true
    org_role = Editor

    [auth.basic]
    enabled = false

    [analytics]
    check_for_updates = false

  datasources.yaml: |-
    apiVersion: 1
    datasources:
    - name: prometheus
      type: prometheus
      access: proxy
      orgId: 1
      url: http://linkerd-prometheus.Namespace.svc.cluster.local:9090
      isDefault: true
      jsonData:
        timeInterval: "5s"
      version: 1
      editable: true

  dashboards.yaml: |-
    apiVersion: 1
    providers:
    - name: 'default'
      orgId: 1
      folder: ''
      type: file
      disableDeletion: true
      editable: true
      options:
        path: /var/lib/grafana/dashboards
        homeDashboardId: linkerd-top-line
---
